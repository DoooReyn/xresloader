syntax = "proto3";

import "xresloader.proto";
import "xresloader_ue.proto";

import "dependency.proto";

message role_cfg {
    uint32  id           = 1;
    uint32  unlock_level = 2;
    uint32  cost_type    = 3;
    int32   cost_value   = 4;
    string  name         = 5;
    dep_cfg dep_test     = 10;

    repeated string test_array    = 11;
    string          int_as_string = 12;
}

message role_upgrade_cfg {
    option (org.xresloader.ue.helper)       = "helper";
    option (org.xresloader.msg_description) = "Test role_upgrade_cfg with multi keys";

    uint32 Id        = 1 [ (org.xresloader.ue.key_tag) = 1000 ];
    uint32 Level     = 2 [ (org.xresloader.ue.key_tag) = 1 ];
    uint32 CostType  = 3 [ (org.xresloader.verifier) = "cost_type", (org.xresloader.field_description) = "Refer to cost_type" ];
    int32  CostValue = 4;
    int32  ScoreAdd  = 5;
}

message arr_in_arr {
    option (org.xresloader.ue.helper)         = "helper";
    option (org.xresloader.ue.not_data_table) = true;

    string   name           = 1 [ (org.xresloader.field_description) = "This is a test name in array" ];
    repeated int32 int_arr  = 2;
    repeated string str_arr = 3;

    oneof test_onof {
        role_cfg         test_info_role        = 11;
        role_upgrade_cfg test_role_upgrade_cfg = 12;
    }

    enum test_nested_enum {
        EN_TEST_NESTED_ENUM_VAL_1 = 0;
        EN_TEST_NESTED_ENUM_VAL_2 = 123;
    }

    message test_nested_message {
        oneof test_onof {
            role_cfg         test_nested_message_info_role        = 11;
            role_upgrade_cfg test_nested_message_role_upgrade_cfg = 12;
        }

        enum test_nested_enum {
            EN_TEST_NESTED_MESSAGE_ENUM_VAL_1 = 0;
            EN_TEST_NESTED_MESSAGE_ENUM_VAL_2 = 123;
        }
    }
}

message test_msg_verifier {
    option (org.xresloader.msg_separator) = "-^";

    uint32 test_id_1 = 10001;
    uint32 test_id_2 = 10002 [ (org.xresloader.field_alias) = "测试ID别名2" ];
}

message arr_in_arr_cfg {
    option (org.xresloader.ue.helper)       = "helper";
    option (org.xresloader.msg_description) = "Test arr_in_arr_cfg";

    uint32   id             = 1 [ (org.xresloader.ue.key_tag) = 1, (org.xresloader.field_description) = "This is a Key" ];
    repeated arr_in_arr arr = 2;

    repeated int32 test_plain_int_arr             = 3;
    repeated cost_type test_plain_enum_arr        = 4;
    test_msg_verifier  test_plain_msg             = 5 [ (org.xresloader.field_separator) = "&" ];
    repeated test_msg_verifier test_plain_msg_arr = 6;
}