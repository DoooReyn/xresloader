// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dependency.proto

#ifndef PROTOBUF_INCLUDED_dependency_2eproto
#define PROTOBUF_INCLUDED_dependency_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dep_level2.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dependency_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dependency_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dependency_2eproto();
class dep_cfg;
class dep_cfgDefaultTypeInternal;
extern dep_cfgDefaultTypeInternal _dep_cfg_default_instance_;
namespace google {
namespace protobuf {
template<> ::dep_cfg* Arena::CreateMaybeMessage<::dep_cfg>(Arena*);
}  // namespace protobuf
}  // namespace google

enum game_const_config {
  EN_GCC_PERCENT_BASE = 10000,
  EN_GCC_RANDOM_RANGE_UNIT = 10,
  EN_GCC_RESOURCE_MAX_LIMIT = 9999999,
  EN_GCC_LEVEL_LIMIT = 999,
  EN_GCC_SOLDIER_TYPE_MASK = 100,
  EN_GCC_ACTIVITY_TYPE_MASK = 1000,
  EN_GCC_FORMULAR_TYPE_MASK = 10,
  EN_GCC_SCREEN_WIDTH = 1136,
  EN_GCC_SCREEN_HEIGHT = 640,
  EN_GCC_CAMERA_OFFSET = 268
};
bool game_const_config_IsValid(int value);
const game_const_config game_const_config_MIN = EN_GCC_RANDOM_RANGE_UNIT;
const game_const_config game_const_config_MAX = EN_GCC_RESOURCE_MAX_LIMIT;
const int game_const_config_ARRAYSIZE = game_const_config_MAX + 1;

const ::google::protobuf::EnumDescriptor* game_const_config_descriptor();
inline const ::std::string& game_const_config_Name(game_const_config value) {
  return ::google::protobuf::internal::NameOfEnum(
    game_const_config_descriptor(), value);
}
inline bool game_const_config_Parse(
    const ::std::string& name, game_const_config* value) {
  return ::google::protobuf::internal::ParseNamedEnum<game_const_config>(
    game_const_config_descriptor(), name, value);
}
enum cost_type {
  EN_CT_UNKNOWN = 0,
  EN_CT_MONEY = 10001,
  EN_CT_DIAMOND = 10101
};
bool cost_type_IsValid(int value);
const cost_type cost_type_MIN = EN_CT_UNKNOWN;
const cost_type cost_type_MAX = EN_CT_DIAMOND;
const int cost_type_ARRAYSIZE = cost_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* cost_type_descriptor();
inline const ::std::string& cost_type_Name(cost_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    cost_type_descriptor(), value);
}
inline bool cost_type_Parse(
    const ::std::string& name, cost_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<cost_type>(
    cost_type_descriptor(), name, value);
}
// ===================================================================

class dep_cfg :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dep_cfg) */ {
 public:
  dep_cfg();
  virtual ~dep_cfg();

  dep_cfg(const dep_cfg& from);

  inline dep_cfg& operator=(const dep_cfg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  dep_cfg(dep_cfg&& from) noexcept
    : dep_cfg() {
    *this = ::std::move(from);
  }

  inline dep_cfg& operator=(dep_cfg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const dep_cfg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const dep_cfg* internal_default_instance() {
    return reinterpret_cast<const dep_cfg*>(
               &_dep_cfg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(dep_cfg* other);
  friend void swap(dep_cfg& a, dep_cfg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline dep_cfg* New() const final {
    return CreateMaybeMessage<dep_cfg>(nullptr);
  }

  dep_cfg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<dep_cfg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const dep_cfg& from);
  void MergeFrom(const dep_cfg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(dep_cfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .dep2_cfg dep2 = 3;
  bool has_dep2() const;
  void clear_dep2();
  static const int kDep2FieldNumber = 3;
  const ::dep2_cfg& dep2() const;
  ::dep2_cfg* release_dep2();
  ::dep2_cfg* mutable_dep2();
  void set_allocated_dep2(::dep2_cfg* dep2);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dep_cfg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::dep2_cfg* dep2_;
  ::google::protobuf::uint32 id_;
  friend struct ::TableStruct_dependency_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// dep_cfg

// optional uint32 id = 1;
inline bool dep_cfg::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dep_cfg::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 dep_cfg::id() const {
  // @@protoc_insertion_point(field_get:dep_cfg.id)
  return id_;
}
inline void dep_cfg::set_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
  // @@protoc_insertion_point(field_set:dep_cfg.id)
}

// optional string name = 2;
inline bool dep_cfg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dep_cfg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& dep_cfg::name() const {
  // @@protoc_insertion_point(field_get:dep_cfg.name)
  return name_.GetNoArena();
}
inline void dep_cfg::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dep_cfg.name)
}
#if LANG_CXX11
inline void dep_cfg::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dep_cfg.name)
}
#endif
inline void dep_cfg::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dep_cfg.name)
}
inline void dep_cfg::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dep_cfg.name)
}
inline ::std::string* dep_cfg::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:dep_cfg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* dep_cfg::release_name() {
  // @@protoc_insertion_point(field_release:dep_cfg.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void dep_cfg::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dep_cfg.name)
}

// optional .dep2_cfg dep2 = 3;
inline bool dep_cfg::has_dep2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::dep2_cfg& dep_cfg::dep2() const {
  const ::dep2_cfg* p = dep2_;
  // @@protoc_insertion_point(field_get:dep_cfg.dep2)
  return p != nullptr ? *p : *reinterpret_cast<const ::dep2_cfg*>(
      &::_dep2_cfg_default_instance_);
}
inline ::dep2_cfg* dep_cfg::release_dep2() {
  // @@protoc_insertion_point(field_release:dep_cfg.dep2)
  _has_bits_[0] &= ~0x00000002u;
  ::dep2_cfg* temp = dep2_;
  dep2_ = nullptr;
  return temp;
}
inline ::dep2_cfg* dep_cfg::mutable_dep2() {
  _has_bits_[0] |= 0x00000002u;
  if (dep2_ == nullptr) {
    auto* p = CreateMaybeMessage<::dep2_cfg>(GetArenaNoVirtual());
    dep2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dep_cfg.dep2)
  return dep2_;
}
inline void dep_cfg::set_allocated_dep2(::dep2_cfg* dep2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dep2_);
  }
  if (dep2) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dep2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dep2, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dep2_ = dep2;
  // @@protoc_insertion_point(field_set_allocated:dep_cfg.dep2)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::game_const_config> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_const_config>() {
  return ::game_const_config_descriptor();
}
template <> struct is_proto_enum< ::cost_type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cost_type>() {
  return ::cost_type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dependency_2eproto
