// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dependency.proto

#include "dependency.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_dep_5flevel2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_dep2_cfg_dep_5flevel2_2eproto;
class dep_cfgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<dep_cfg> _instance;
} _dep_cfg_default_instance_;
static void InitDefaultsdep_cfg_dependency_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_dep_cfg_default_instance_;
    new (ptr) ::dep_cfg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dep_cfg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_dep_cfg_dependency_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsdep_cfg_dependency_2eproto}, {
      &scc_info_dep2_cfg_dep_5flevel2_2eproto.base,}};

void InitDefaults_dependency_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_dep_cfg_dependency_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_dependency_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_dependency_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_dependency_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_dependency_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::dep_cfg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dep_cfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dep_cfg, id_),
  PROTOBUF_FIELD_OFFSET(::dep_cfg, name_),
  PROTOBUF_FIELD_OFFSET(::dep_cfg, dep2_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::dep_cfg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_dep_cfg_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_dependency_2eproto = {
  {}, AddDescriptors_dependency_2eproto, "dependency.proto", schemas,
  file_default_instances, TableStruct_dependency_2eproto::offsets,
  file_level_metadata_dependency_2eproto, 1, file_level_enum_descriptors_dependency_2eproto, file_level_service_descriptors_dependency_2eproto,
};

const char descriptor_table_protodef_dependency_2eproto[] =
  "\n\020dependency.proto\032\020dep_level2.proto\"<\n\007"
  "dep_cfg\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\027\n\004dep"
  "2\030\003 \001(\0132\t.dep2_cfg*\267\002\n\021game_const_config"
  "\022\030\n\023EN_GCC_PERCENT_BASE\020\220N\022\034\n\030EN_GCC_RAN"
  "DOM_RANGE_UNIT\020\n\022 \n\031EN_GCC_RESOURCE_MAX_"
  "LIMIT\020\377\254\342\004\022\027\n\022EN_GCC_LEVEL_LIMIT\020\347\007\022\034\n\030E"
  "N_GCC_SOLDIER_TYPE_MASK\020d\022\036\n\031EN_GCC_ACTI"
  "VITY_TYPE_MASK\020\350\007\022\035\n\031EN_GCC_FORMULAR_TYP"
  "E_MASK\020\n\022\030\n\023EN_GCC_SCREEN_WIDTH\020\360\010\022\031\n\024EN"
  "_GCC_SCREEN_HEIGHT\020\200\005\022\031\n\024EN_GCC_CAMERA_O"
  "FFSET\020\214\002\032\002\020\001*D\n\tcost_type\022\021\n\rEN_CT_UNKNO"
  "WN\020\000\022\020\n\013EN_CT_MONEY\020\221N\022\022\n\rEN_CT_DIAMOND\020"
  "\365N"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_dependency_2eproto = {
  false, InitDefaults_dependency_2eproto, 
  descriptor_table_protodef_dependency_2eproto,
  "dependency.proto", &assign_descriptors_table_dependency_2eproto, 482,
};

void AddDescriptors_dependency_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_dep_5flevel2_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_dependency_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dependency_2eproto = []() { AddDescriptors_dependency_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* game_const_config_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dependency_2eproto);
  return file_level_enum_descriptors_dependency_2eproto[0];
}
bool game_const_config_IsValid(int value) {
  switch (value) {
    case 10:
    case 100:
    case 268:
    case 640:
    case 999:
    case 1000:
    case 1136:
    case 10000:
    case 9999999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* cost_type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_dependency_2eproto);
  return file_level_enum_descriptors_dependency_2eproto[1];
}
bool cost_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 10001:
    case 10101:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void dep_cfg::InitAsDefaultInstance() {
  ::_dep_cfg_default_instance_._instance.get_mutable()->dep2_ = const_cast< ::dep2_cfg*>(
      ::dep2_cfg::internal_default_instance());
}
class dep_cfg::HasBitSetters {
 public:
  static void set_has_id(dep_cfg* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_name(dep_cfg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::dep2_cfg& dep2(const dep_cfg* msg);
  static void set_has_dep2(dep_cfg* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::dep2_cfg&
dep_cfg::HasBitSetters::dep2(const dep_cfg* msg) {
  return *msg->dep2_;
}
void dep_cfg::clear_dep2() {
  if (dep2_ != nullptr) dep2_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int dep_cfg::kIdFieldNumber;
const int dep_cfg::kNameFieldNumber;
const int dep_cfg::kDep2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

dep_cfg::dep_cfg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dep_cfg)
}
dep_cfg::dep_cfg(const dep_cfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_dep2()) {
    dep2_ = new ::dep2_cfg(*from.dep2_);
  } else {
    dep2_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:dep_cfg)
}

void dep_cfg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_dep_cfg_dependency_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dep2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&dep2_)) + sizeof(id_));
}

dep_cfg::~dep_cfg() {
  // @@protoc_insertion_point(destructor:dep_cfg)
  SharedDtor();
}

void dep_cfg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dep2_;
}

void dep_cfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const dep_cfg& dep_cfg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_dep_cfg_dependency_2eproto.base);
  return *internal_default_instance();
}


void dep_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:dep_cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dep2_ != nullptr);
      dep2_->Clear();
    }
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* dep_cfg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<dep_cfg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("dep_cfg.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .dep2_cfg dep2 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::dep2_cfg::_InternalParse;
        object = msg->mutable_dep2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool dep_cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dep_cfg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dep_cfg.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .dep2_cfg dep2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dep2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dep_cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dep_cfg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void dep_cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dep_cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dep_cfg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .dep2_cfg dep2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::dep2(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dep_cfg)
}

::google::protobuf::uint8* dep_cfg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dep_cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dep_cfg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .dep2_cfg dep2 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::dep2(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dep_cfg)
  return target;
}

size_t dep_cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dep_cfg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .dep2_cfg dep2 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dep2_);
    }

    // optional uint32 id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void dep_cfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dep_cfg)
  GOOGLE_DCHECK_NE(&from, this);
  const dep_cfg* source =
      ::google::protobuf::DynamicCastToGenerated<dep_cfg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dep_cfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dep_cfg)
    MergeFrom(*source);
  }
}

void dep_cfg::MergeFrom(const dep_cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dep_cfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dep2()->::dep2_cfg::MergeFrom(from.dep2());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void dep_cfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dep_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dep_cfg::CopyFrom(const dep_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dep_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dep_cfg::IsInitialized() const {
  return true;
}

void dep_cfg::Swap(dep_cfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void dep_cfg::InternalSwap(dep_cfg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dep2_, other->dep2_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata dep_cfg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_dependency_2eproto);
  return ::file_level_metadata_dependency_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::dep_cfg* Arena::CreateMaybeMessage< ::dep_cfg >(Arena* arena) {
  return Arena::CreateInternal< ::dep_cfg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
