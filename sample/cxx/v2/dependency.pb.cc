// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dependency.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dependency.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* dep_cfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  dep_cfg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* game_const_config_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* cost_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dependency_2eproto() {
  protobuf_AddDesc_dependency_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dependency.proto");
  GOOGLE_CHECK(file != NULL);
  dep_cfg_descriptor_ = file->message_type(0);
  static const int dep_cfg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dep_cfg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dep_cfg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dep_cfg, dep2_),
  };
  dep_cfg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      dep_cfg_descriptor_,
      dep_cfg::default_instance_,
      dep_cfg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dep_cfg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(dep_cfg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(dep_cfg));
  game_const_config_descriptor_ = file->enum_type(0);
  cost_type_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dependency_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    dep_cfg_descriptor_, &dep_cfg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dependency_2eproto() {
  delete dep_cfg::default_instance_;
  delete dep_cfg_reflection_;
}

void protobuf_AddDesc_dependency_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_dep_5flevel2_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020dependency.proto\032\020dep_level2.proto\"<\n\007"
    "dep_cfg\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\027\n\004dep"
    "2\030\003 \001(\0132\t.dep2_cfg*\267\002\n\021game_const_config"
    "\022\030\n\023EN_GCC_PERCENT_BASE\020\220N\022\034\n\030EN_GCC_RAN"
    "DOM_RANGE_UNIT\020\n\022 \n\031EN_GCC_RESOURCE_MAX_"
    "LIMIT\020\377\254\342\004\022\027\n\022EN_GCC_LEVEL_LIMIT\020\347\007\022\034\n\030E"
    "N_GCC_SOLDIER_TYPE_MASK\020d\022\036\n\031EN_GCC_ACTI"
    "VITY_TYPE_MASK\020\350\007\022\035\n\031EN_GCC_FORMULAR_TYP"
    "E_MASK\020\n\022\030\n\023EN_GCC_SCREEN_WIDTH\020\360\010\022\031\n\024EN"
    "_GCC_SCREEN_HEIGHT\020\200\005\022\031\n\024EN_GCC_CAMERA_O"
    "FFSET\020\214\002\032\002\020\001*D\n\tcost_type\022\021\n\rEN_CT_UNKNO"
    "WN\020\000\022\020\n\013EN_CT_MONEY\020\221N\022\022\n\rEN_CT_DIAMOND\020"
    "\365N", 482);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dependency.proto", &protobuf_RegisterTypes);
  dep_cfg::default_instance_ = new dep_cfg();
  dep_cfg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dependency_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dependency_2eproto {
  StaticDescriptorInitializer_dependency_2eproto() {
    protobuf_AddDesc_dependency_2eproto();
  }
} static_descriptor_initializer_dependency_2eproto_;
const ::google::protobuf::EnumDescriptor* game_const_config_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return game_const_config_descriptor_;
}
bool game_const_config_IsValid(int value) {
  switch(value) {
    case 10:
    case 100:
    case 268:
    case 640:
    case 999:
    case 1000:
    case 1136:
    case 10000:
    case 9999999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* cost_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cost_type_descriptor_;
}
bool cost_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 10001:
    case 10101:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int dep_cfg::kIdFieldNumber;
const int dep_cfg::kNameFieldNumber;
const int dep_cfg::kDep2FieldNumber;
#endif  // !_MSC_VER

dep_cfg::dep_cfg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dep_cfg)
}

void dep_cfg::InitAsDefaultInstance() {
  dep2_ = const_cast< ::dep2_cfg*>(&::dep2_cfg::default_instance());
}

dep_cfg::dep_cfg(const dep_cfg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dep_cfg)
}

void dep_cfg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dep2_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

dep_cfg::~dep_cfg() {
  // @@protoc_insertion_point(destructor:dep_cfg)
  SharedDtor();
}

void dep_cfg::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete dep2_;
  }
}

void dep_cfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* dep_cfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return dep_cfg_descriptor_;
}

const dep_cfg& dep_cfg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dependency_2eproto();
  return *default_instance_;
}

dep_cfg* dep_cfg::default_instance_ = NULL;

dep_cfg* dep_cfg::New() const {
  return new dep_cfg;
}

void dep_cfg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_dep2()) {
      if (dep2_ != NULL) dep2_->::dep2_cfg::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool dep_cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dep_cfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dep2;
        break;
      }

      // optional .dep2_cfg dep2 = 3;
      case 3: {
        if (tag == 26) {
         parse_dep2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dep2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dep_cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dep_cfg)
  return false;
#undef DO_
}

void dep_cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dep_cfg)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .dep2_cfg dep2 = 3;
  if (has_dep2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dep2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dep_cfg)
}

::google::protobuf::uint8* dep_cfg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dep_cfg)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .dep2_cfg dep2 = 3;
  if (has_dep2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dep2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dep_cfg)
  return target;
}

int dep_cfg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .dep2_cfg dep2 = 3;
    if (has_dep2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dep2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void dep_cfg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const dep_cfg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const dep_cfg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void dep_cfg::MergeFrom(const dep_cfg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_dep2()) {
      mutable_dep2()->::dep2_cfg::MergeFrom(from.dep2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void dep_cfg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void dep_cfg::CopyFrom(const dep_cfg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dep_cfg::IsInitialized() const {

  return true;
}

void dep_cfg::Swap(dep_cfg* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(dep2_, other->dep2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata dep_cfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = dep_cfg_descriptor_;
  metadata.reflection = dep_cfg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
