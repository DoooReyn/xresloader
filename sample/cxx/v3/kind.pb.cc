// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kind.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "kind.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* role_cfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  role_cfg_reflection_ = NULL;
const ::google::protobuf::Descriptor* role_upgrade_cfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  role_upgrade_cfg_reflection_ = NULL;
const ::google::protobuf::Descriptor* arr_in_arr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  arr_in_arr_reflection_ = NULL;
const ::google::protobuf::Descriptor* test_msg_verifier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  test_msg_verifier_reflection_ = NULL;
const ::google::protobuf::Descriptor* arr_in_arr_cfg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  arr_in_arr_cfg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_kind_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_kind_2eproto() {
  protobuf_AddDesc_kind_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "kind.proto");
  GOOGLE_CHECK(file != NULL);
  role_cfg_descriptor_ = file->message_type(0);
  static const int role_cfg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, unlock_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, cost_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, cost_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, dep_test_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, test_array_),
  };
  role_cfg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      role_cfg_descriptor_,
      role_cfg::internal_default_instance(),
      role_cfg_offsets_,
      -1,
      -1,
      -1,
      sizeof(role_cfg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_cfg, _internal_metadata_));
  role_upgrade_cfg_descriptor_ = file->message_type(1);
  static const int role_upgrade_cfg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_upgrade_cfg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_upgrade_cfg, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_upgrade_cfg, costtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_upgrade_cfg, costvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_upgrade_cfg, scoreadd_),
  };
  role_upgrade_cfg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      role_upgrade_cfg_descriptor_,
      role_upgrade_cfg::internal_default_instance(),
      role_upgrade_cfg_offsets_,
      -1,
      -1,
      -1,
      sizeof(role_upgrade_cfg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_upgrade_cfg, _internal_metadata_));
  arr_in_arr_descriptor_ = file->message_type(2);
  static const int arr_in_arr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr, int_arr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr, str_arr_),
  };
  arr_in_arr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      arr_in_arr_descriptor_,
      arr_in_arr::internal_default_instance(),
      arr_in_arr_offsets_,
      -1,
      -1,
      -1,
      sizeof(arr_in_arr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr, _internal_metadata_));
  test_msg_verifier_descriptor_ = file->message_type(3);
  static const int test_msg_verifier_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test_msg_verifier, test_id_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test_msg_verifier, test_id_2_),
  };
  test_msg_verifier_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      test_msg_verifier_descriptor_,
      test_msg_verifier::internal_default_instance(),
      test_msg_verifier_offsets_,
      -1,
      -1,
      -1,
      sizeof(test_msg_verifier),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test_msg_verifier, _internal_metadata_));
  arr_in_arr_cfg_descriptor_ = file->message_type(4);
  static const int arr_in_arr_cfg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr_cfg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr_cfg, arr_),
  };
  arr_in_arr_cfg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      arr_in_arr_cfg_descriptor_,
      arr_in_arr_cfg::internal_default_instance(),
      arr_in_arr_cfg_offsets_,
      -1,
      -1,
      -1,
      sizeof(arr_in_arr_cfg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(arr_in_arr_cfg, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_kind_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      role_cfg_descriptor_, role_cfg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      role_upgrade_cfg_descriptor_, role_upgrade_cfg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      arr_in_arr_descriptor_, arr_in_arr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      test_msg_verifier_descriptor_, test_msg_verifier::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      arr_in_arr_cfg_descriptor_, arr_in_arr_cfg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_kind_2eproto() {
  role_cfg_default_instance_.Shutdown();
  delete role_cfg_reflection_;
  role_upgrade_cfg_default_instance_.Shutdown();
  delete role_upgrade_cfg_reflection_;
  arr_in_arr_default_instance_.Shutdown();
  delete arr_in_arr_reflection_;
  test_msg_verifier_default_instance_.Shutdown();
  delete test_msg_verifier_reflection_;
  arr_in_arr_cfg_default_instance_.Shutdown();
  delete arr_in_arr_cfg_reflection_;
}

void protobuf_InitDefaults_kind_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_dependency_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  role_cfg_default_instance_.DefaultConstruct();
  role_upgrade_cfg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  arr_in_arr_default_instance_.DefaultConstruct();
  test_msg_verifier_default_instance_.DefaultConstruct();
  arr_in_arr_cfg_default_instance_.DefaultConstruct();
  role_cfg_default_instance_.get_mutable()->InitAsDefaultInstance();
  role_upgrade_cfg_default_instance_.get_mutable()->InitAsDefaultInstance();
  arr_in_arr_default_instance_.get_mutable()->InitAsDefaultInstance();
  test_msg_verifier_default_instance_.get_mutable()->InitAsDefaultInstance();
  arr_in_arr_cfg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_kind_2eproto_once_);
void protobuf_InitDefaults_kind_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_kind_2eproto_once_,
                 &protobuf_InitDefaults_kind_2eproto_impl);
}
void protobuf_AddDesc_kind_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_kind_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nkind.proto\032\020dependency.proto\"\221\001\n\010role_"
    "cfg\022\n\n\002id\030\001 \001(\r\022\024\n\014unlock_level\030\002 \001(\r\022\021\n"
    "\tcost_type\030\003 \001(\r\022\022\n\ncost_value\030\004 \001(\005\022\014\n\004"
    "name\030\005 \001(\t\022\032\n\010dep_test\030\n \001(\0132\010.dep_cfg\022\022"
    "\n\ntest_array\030\013 \003(\t\"d\n\020role_upgrade_cfg\022\n"
    "\n\002Id\030\001 \001(\r\022\r\n\005Level\030\002 \001(\r\022\020\n\010CostType\030\003 "
    "\001(\r\022\021\n\tCostValue\030\004 \001(\005\022\020\n\010ScoreAdd\030\005 \001(\005"
    "\"<\n\narr_in_arr\022\014\n\004name\030\001 \001(\t\022\017\n\007int_arr\030"
    "\002 \003(\005\022\017\n\007str_arr\030\003 \003(\t\";\n\021test_msg_verif"
    "ier\022\022\n\ttest_id_1\030\221N \001(\r\022\022\n\ttest_id_2\030\222N "
    "\001(\r\"6\n\016arr_in_arr_cfg\022\n\n\002id\030\001 \001(\r\022\030\n\003arr"
    "\030\002 \003(\0132\013.arr_in_arrb\006proto3", 467);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "kind.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_dependency_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_kind_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_kind_2eproto_once_);
void protobuf_AddDesc_kind_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_kind_2eproto_once_,
                 &protobuf_AddDesc_kind_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_kind_2eproto {
  StaticDescriptorInitializer_kind_2eproto() {
    protobuf_AddDesc_kind_2eproto();
  }
} static_descriptor_initializer_kind_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int role_cfg::kIdFieldNumber;
const int role_cfg::kUnlockLevelFieldNumber;
const int role_cfg::kCostTypeFieldNumber;
const int role_cfg::kCostValueFieldNumber;
const int role_cfg::kNameFieldNumber;
const int role_cfg::kDepTestFieldNumber;
const int role_cfg::kTestArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

role_cfg::role_cfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_kind_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:role_cfg)
}

void role_cfg::InitAsDefaultInstance() {
  dep_test_ = const_cast< ::dep_cfg*>(
      ::dep_cfg::internal_default_instance());
}

role_cfg::role_cfg(const role_cfg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:role_cfg)
}

void role_cfg::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dep_test_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&cost_value_) -
    reinterpret_cast<char*>(&id_) + sizeof(cost_value_));
  _cached_size_ = 0;
}

role_cfg::~role_cfg() {
  // @@protoc_insertion_point(destructor:role_cfg)
  SharedDtor();
}

void role_cfg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &role_cfg_default_instance_.get()) {
    delete dep_test_;
  }
}

void role_cfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* role_cfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return role_cfg_descriptor_;
}

const role_cfg& role_cfg::default_instance() {
  protobuf_InitDefaults_kind_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<role_cfg> role_cfg_default_instance_;

role_cfg* role_cfg::New(::google::protobuf::Arena* arena) const {
  role_cfg* n = new role_cfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void role_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:role_cfg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(role_cfg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<role_cfg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, cost_value_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && dep_test_ != NULL) delete dep_test_;
  dep_test_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  test_array_.Clear();
}

bool role_cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:role_cfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unlock_level;
        break;
      }

      // optional uint32 unlock_level = 2;
      case 2: {
        if (tag == 16) {
         parse_unlock_level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cost_type;
        break;
      }

      // optional uint32 cost_type = 3;
      case 3: {
        if (tag == 24) {
         parse_cost_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cost_value;
        break;
      }

      // optional int32 cost_value = 4;
      case 4: {
        if (tag == 32) {
         parse_cost_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "role_cfg.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_dep_test;
        break;
      }

      // optional .dep_cfg dep_test = 10;
      case 10: {
        if (tag == 82) {
         parse_dep_test:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dep_test()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_test_array;
        break;
      }

      // repeated string test_array = 11;
      case 11: {
        if (tag == 90) {
         parse_test_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_array()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_array(this->test_array_size() - 1).data(),
            this->test_array(this->test_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "role_cfg.test_array"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_test_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:role_cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:role_cfg)
  return false;
#undef DO_
}

void role_cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:role_cfg)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 unlock_level = 2;
  if (this->unlock_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unlock_level(), output);
  }

  // optional uint32 cost_type = 3;
  if (this->cost_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cost_type(), output);
  }

  // optional int32 cost_value = 4;
  if (this->cost_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cost_value(), output);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "role_cfg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional .dep_cfg dep_test = 10;
  if (this->has_dep_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->dep_test_, output);
  }

  // repeated string test_array = 11;
  for (int i = 0; i < this->test_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_array(i).data(), this->test_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "role_cfg.test_array");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->test_array(i), output);
  }

  // @@protoc_insertion_point(serialize_end:role_cfg)
}

::google::protobuf::uint8* role_cfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:role_cfg)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 unlock_level = 2;
  if (this->unlock_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unlock_level(), target);
  }

  // optional uint32 cost_type = 3;
  if (this->cost_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cost_type(), target);
  }

  // optional int32 cost_value = 4;
  if (this->cost_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cost_value(), target);
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "role_cfg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional .dep_cfg dep_test = 10;
  if (this->has_dep_test()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->dep_test_, false, target);
  }

  // repeated string test_array = 11;
  for (int i = 0; i < this->test_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_array(i).data(), this->test_array(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "role_cfg.test_array");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->test_array(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:role_cfg)
  return target;
}

size_t role_cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:role_cfg)
  size_t total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional uint32 unlock_level = 2;
  if (this->unlock_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unlock_level());
  }

  // optional uint32 cost_type = 3;
  if (this->cost_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cost_type());
  }

  // optional int32 cost_value = 4;
  if (this->cost_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cost_value());
  }

  // optional string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .dep_cfg dep_test = 10;
  if (this->has_dep_test()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dep_test_);
  }

  // repeated string test_array = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_array_size());
  for (int i = 0; i < this->test_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_array(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void role_cfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:role_cfg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const role_cfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const role_cfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:role_cfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:role_cfg)
    UnsafeMergeFrom(*source);
  }
}

void role_cfg::MergeFrom(const role_cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:role_cfg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void role_cfg::UnsafeMergeFrom(const role_cfg& from) {
  GOOGLE_DCHECK(&from != this);
  test_array_.UnsafeMergeFrom(from.test_array_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.unlock_level() != 0) {
    set_unlock_level(from.unlock_level());
  }
  if (from.cost_type() != 0) {
    set_cost_type(from.cost_type());
  }
  if (from.cost_value() != 0) {
    set_cost_value(from.cost_value());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_dep_test()) {
    mutable_dep_test()->::dep_cfg::MergeFrom(from.dep_test());
  }
}

void role_cfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:role_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void role_cfg::CopyFrom(const role_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:role_cfg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool role_cfg::IsInitialized() const {

  return true;
}

void role_cfg::Swap(role_cfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void role_cfg::InternalSwap(role_cfg* other) {
  std::swap(id_, other->id_);
  std::swap(unlock_level_, other->unlock_level_);
  std::swap(cost_type_, other->cost_type_);
  std::swap(cost_value_, other->cost_value_);
  name_.Swap(&other->name_);
  std::swap(dep_test_, other->dep_test_);
  test_array_.UnsafeArenaSwap(&other->test_array_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata role_cfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = role_cfg_descriptor_;
  metadata.reflection = role_cfg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// role_cfg

// optional uint32 id = 1;
void role_cfg::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 role_cfg::id() const {
  // @@protoc_insertion_point(field_get:role_cfg.id)
  return id_;
}
void role_cfg::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:role_cfg.id)
}

// optional uint32 unlock_level = 2;
void role_cfg::clear_unlock_level() {
  unlock_level_ = 0u;
}
::google::protobuf::uint32 role_cfg::unlock_level() const {
  // @@protoc_insertion_point(field_get:role_cfg.unlock_level)
  return unlock_level_;
}
void role_cfg::set_unlock_level(::google::protobuf::uint32 value) {
  
  unlock_level_ = value;
  // @@protoc_insertion_point(field_set:role_cfg.unlock_level)
}

// optional uint32 cost_type = 3;
void role_cfg::clear_cost_type() {
  cost_type_ = 0u;
}
::google::protobuf::uint32 role_cfg::cost_type() const {
  // @@protoc_insertion_point(field_get:role_cfg.cost_type)
  return cost_type_;
}
void role_cfg::set_cost_type(::google::protobuf::uint32 value) {
  
  cost_type_ = value;
  // @@protoc_insertion_point(field_set:role_cfg.cost_type)
}

// optional int32 cost_value = 4;
void role_cfg::clear_cost_value() {
  cost_value_ = 0;
}
::google::protobuf::int32 role_cfg::cost_value() const {
  // @@protoc_insertion_point(field_get:role_cfg.cost_value)
  return cost_value_;
}
void role_cfg::set_cost_value(::google::protobuf::int32 value) {
  
  cost_value_ = value;
  // @@protoc_insertion_point(field_set:role_cfg.cost_value)
}

// optional string name = 5;
void role_cfg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& role_cfg::name() const {
  // @@protoc_insertion_point(field_get:role_cfg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void role_cfg::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:role_cfg.name)
}
void role_cfg::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:role_cfg.name)
}
void role_cfg::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:role_cfg.name)
}
::std::string* role_cfg::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:role_cfg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* role_cfg::release_name() {
  // @@protoc_insertion_point(field_release:role_cfg.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void role_cfg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:role_cfg.name)
}

// optional .dep_cfg dep_test = 10;
bool role_cfg::has_dep_test() const {
  return this != internal_default_instance() && dep_test_ != NULL;
}
void role_cfg::clear_dep_test() {
  if (GetArenaNoVirtual() == NULL && dep_test_ != NULL) delete dep_test_;
  dep_test_ = NULL;
}
const ::dep_cfg& role_cfg::dep_test() const {
  // @@protoc_insertion_point(field_get:role_cfg.dep_test)
  return dep_test_ != NULL ? *dep_test_
                         : *::dep_cfg::internal_default_instance();
}
::dep_cfg* role_cfg::mutable_dep_test() {
  
  if (dep_test_ == NULL) {
    dep_test_ = new ::dep_cfg;
  }
  // @@protoc_insertion_point(field_mutable:role_cfg.dep_test)
  return dep_test_;
}
::dep_cfg* role_cfg::release_dep_test() {
  // @@protoc_insertion_point(field_release:role_cfg.dep_test)
  
  ::dep_cfg* temp = dep_test_;
  dep_test_ = NULL;
  return temp;
}
void role_cfg::set_allocated_dep_test(::dep_cfg* dep_test) {
  delete dep_test_;
  dep_test_ = dep_test;
  if (dep_test) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:role_cfg.dep_test)
}

// repeated string test_array = 11;
int role_cfg::test_array_size() const {
  return test_array_.size();
}
void role_cfg::clear_test_array() {
  test_array_.Clear();
}
const ::std::string& role_cfg::test_array(int index) const {
  // @@protoc_insertion_point(field_get:role_cfg.test_array)
  return test_array_.Get(index);
}
::std::string* role_cfg::mutable_test_array(int index) {
  // @@protoc_insertion_point(field_mutable:role_cfg.test_array)
  return test_array_.Mutable(index);
}
void role_cfg::set_test_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:role_cfg.test_array)
  test_array_.Mutable(index)->assign(value);
}
void role_cfg::set_test_array(int index, const char* value) {
  test_array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:role_cfg.test_array)
}
void role_cfg::set_test_array(int index, const char* value, size_t size) {
  test_array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:role_cfg.test_array)
}
::std::string* role_cfg::add_test_array() {
  // @@protoc_insertion_point(field_add_mutable:role_cfg.test_array)
  return test_array_.Add();
}
void role_cfg::add_test_array(const ::std::string& value) {
  test_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:role_cfg.test_array)
}
void role_cfg::add_test_array(const char* value) {
  test_array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:role_cfg.test_array)
}
void role_cfg::add_test_array(const char* value, size_t size) {
  test_array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:role_cfg.test_array)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
role_cfg::test_array() const {
  // @@protoc_insertion_point(field_list:role_cfg.test_array)
  return test_array_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
role_cfg::mutable_test_array() {
  // @@protoc_insertion_point(field_mutable_list:role_cfg.test_array)
  return &test_array_;
}

inline const role_cfg* role_cfg::internal_default_instance() {
  return &role_cfg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int role_upgrade_cfg::kIdFieldNumber;
const int role_upgrade_cfg::kLevelFieldNumber;
const int role_upgrade_cfg::kCostTypeFieldNumber;
const int role_upgrade_cfg::kCostValueFieldNumber;
const int role_upgrade_cfg::kScoreAddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

role_upgrade_cfg::role_upgrade_cfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_kind_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:role_upgrade_cfg)
}

void role_upgrade_cfg::InitAsDefaultInstance() {
}

role_upgrade_cfg::role_upgrade_cfg(const role_upgrade_cfg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:role_upgrade_cfg)
}

void role_upgrade_cfg::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&scoreadd_) -
    reinterpret_cast<char*>(&id_) + sizeof(scoreadd_));
  _cached_size_ = 0;
}

role_upgrade_cfg::~role_upgrade_cfg() {
  // @@protoc_insertion_point(destructor:role_upgrade_cfg)
  SharedDtor();
}

void role_upgrade_cfg::SharedDtor() {
}

void role_upgrade_cfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* role_upgrade_cfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return role_upgrade_cfg_descriptor_;
}

const role_upgrade_cfg& role_upgrade_cfg::default_instance() {
  protobuf_InitDefaults_kind_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<role_upgrade_cfg> role_upgrade_cfg_default_instance_;

role_upgrade_cfg* role_upgrade_cfg::New(::google::protobuf::Arena* arena) const {
  role_upgrade_cfg* n = new role_upgrade_cfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void role_upgrade_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:role_upgrade_cfg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(role_upgrade_cfg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<role_upgrade_cfg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, scoreadd_);

#undef ZR_HELPER_
#undef ZR_

}

bool role_upgrade_cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:role_upgrade_cfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CostType;
        break;
      }

      // optional uint32 CostType = 3;
      case 3: {
        if (tag == 24) {
         parse_CostType:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &costtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CostValue;
        break;
      }

      // optional int32 CostValue = 4;
      case 4: {
        if (tag == 32) {
         parse_CostValue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costvalue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ScoreAdd;
        break;
      }

      // optional int32 ScoreAdd = 5;
      case 5: {
        if (tag == 40) {
         parse_ScoreAdd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scoreadd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:role_upgrade_cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:role_upgrade_cfg)
  return false;
#undef DO_
}

void role_upgrade_cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:role_upgrade_cfg)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // optional uint32 CostType = 3;
  if (this->costtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->costtype(), output);
  }

  // optional int32 CostValue = 4;
  if (this->costvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->costvalue(), output);
  }

  // optional int32 ScoreAdd = 5;
  if (this->scoreadd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->scoreadd(), output);
  }

  // @@protoc_insertion_point(serialize_end:role_upgrade_cfg)
}

::google::protobuf::uint8* role_upgrade_cfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:role_upgrade_cfg)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // optional uint32 CostType = 3;
  if (this->costtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->costtype(), target);
  }

  // optional int32 CostValue = 4;
  if (this->costvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->costvalue(), target);
  }

  // optional int32 ScoreAdd = 5;
  if (this->scoreadd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->scoreadd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:role_upgrade_cfg)
  return target;
}

size_t role_upgrade_cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:role_upgrade_cfg)
  size_t total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional uint32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 CostType = 3;
  if (this->costtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->costtype());
  }

  // optional int32 CostValue = 4;
  if (this->costvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->costvalue());
  }

  // optional int32 ScoreAdd = 5;
  if (this->scoreadd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scoreadd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void role_upgrade_cfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:role_upgrade_cfg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const role_upgrade_cfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const role_upgrade_cfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:role_upgrade_cfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:role_upgrade_cfg)
    UnsafeMergeFrom(*source);
  }
}

void role_upgrade_cfg::MergeFrom(const role_upgrade_cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:role_upgrade_cfg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void role_upgrade_cfg::UnsafeMergeFrom(const role_upgrade_cfg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.costtype() != 0) {
    set_costtype(from.costtype());
  }
  if (from.costvalue() != 0) {
    set_costvalue(from.costvalue());
  }
  if (from.scoreadd() != 0) {
    set_scoreadd(from.scoreadd());
  }
}

void role_upgrade_cfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:role_upgrade_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void role_upgrade_cfg::CopyFrom(const role_upgrade_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:role_upgrade_cfg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool role_upgrade_cfg::IsInitialized() const {

  return true;
}

void role_upgrade_cfg::Swap(role_upgrade_cfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void role_upgrade_cfg::InternalSwap(role_upgrade_cfg* other) {
  std::swap(id_, other->id_);
  std::swap(level_, other->level_);
  std::swap(costtype_, other->costtype_);
  std::swap(costvalue_, other->costvalue_);
  std::swap(scoreadd_, other->scoreadd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata role_upgrade_cfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = role_upgrade_cfg_descriptor_;
  metadata.reflection = role_upgrade_cfg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// role_upgrade_cfg

// optional uint32 Id = 1;
void role_upgrade_cfg::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 role_upgrade_cfg::id() const {
  // @@protoc_insertion_point(field_get:role_upgrade_cfg.Id)
  return id_;
}
void role_upgrade_cfg::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:role_upgrade_cfg.Id)
}

// optional uint32 Level = 2;
void role_upgrade_cfg::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 role_upgrade_cfg::level() const {
  // @@protoc_insertion_point(field_get:role_upgrade_cfg.Level)
  return level_;
}
void role_upgrade_cfg::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:role_upgrade_cfg.Level)
}

// optional uint32 CostType = 3;
void role_upgrade_cfg::clear_costtype() {
  costtype_ = 0u;
}
::google::protobuf::uint32 role_upgrade_cfg::costtype() const {
  // @@protoc_insertion_point(field_get:role_upgrade_cfg.CostType)
  return costtype_;
}
void role_upgrade_cfg::set_costtype(::google::protobuf::uint32 value) {
  
  costtype_ = value;
  // @@protoc_insertion_point(field_set:role_upgrade_cfg.CostType)
}

// optional int32 CostValue = 4;
void role_upgrade_cfg::clear_costvalue() {
  costvalue_ = 0;
}
::google::protobuf::int32 role_upgrade_cfg::costvalue() const {
  // @@protoc_insertion_point(field_get:role_upgrade_cfg.CostValue)
  return costvalue_;
}
void role_upgrade_cfg::set_costvalue(::google::protobuf::int32 value) {
  
  costvalue_ = value;
  // @@protoc_insertion_point(field_set:role_upgrade_cfg.CostValue)
}

// optional int32 ScoreAdd = 5;
void role_upgrade_cfg::clear_scoreadd() {
  scoreadd_ = 0;
}
::google::protobuf::int32 role_upgrade_cfg::scoreadd() const {
  // @@protoc_insertion_point(field_get:role_upgrade_cfg.ScoreAdd)
  return scoreadd_;
}
void role_upgrade_cfg::set_scoreadd(::google::protobuf::int32 value) {
  
  scoreadd_ = value;
  // @@protoc_insertion_point(field_set:role_upgrade_cfg.ScoreAdd)
}

inline const role_upgrade_cfg* role_upgrade_cfg::internal_default_instance() {
  return &role_upgrade_cfg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int arr_in_arr::kNameFieldNumber;
const int arr_in_arr::kIntArrFieldNumber;
const int arr_in_arr::kStrArrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

arr_in_arr::arr_in_arr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_kind_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:arr_in_arr)
}

void arr_in_arr::InitAsDefaultInstance() {
}

arr_in_arr::arr_in_arr(const arr_in_arr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:arr_in_arr)
}

void arr_in_arr::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

arr_in_arr::~arr_in_arr() {
  // @@protoc_insertion_point(destructor:arr_in_arr)
  SharedDtor();
}

void arr_in_arr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void arr_in_arr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* arr_in_arr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return arr_in_arr_descriptor_;
}

const arr_in_arr& arr_in_arr::default_instance() {
  protobuf_InitDefaults_kind_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<arr_in_arr> arr_in_arr_default_instance_;

arr_in_arr* arr_in_arr::New(::google::protobuf::Arena* arena) const {
  arr_in_arr* n = new arr_in_arr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void arr_in_arr::Clear() {
// @@protoc_insertion_point(message_clear_start:arr_in_arr)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int_arr_.Clear();
  str_arr_.Clear();
}

bool arr_in_arr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:arr_in_arr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arr_in_arr.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_int_arr;
        break;
      }

      // repeated int32 int_arr = 2;
      case 2: {
        if (tag == 18) {
         parse_int_arr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int_arr())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_int_arr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_str_arr;
        break;
      }

      // repeated string str_arr = 3;
      case 3: {
        if (tag == 26) {
         parse_str_arr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_str_arr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_arr(this->str_arr_size() - 1).data(),
            this->str_arr(this->str_arr_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "arr_in_arr.str_arr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_str_arr;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:arr_in_arr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:arr_in_arr)
  return false;
#undef DO_
}

void arr_in_arr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:arr_in_arr)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arr_in_arr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated int32 int_arr = 2;
  if (this->int_arr_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int_arr_cached_byte_size_);
  }
  for (int i = 0; i < this->int_arr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->int_arr(i), output);
  }

  // repeated string str_arr = 3;
  for (int i = 0; i < this->str_arr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_arr(i).data(), this->str_arr(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arr_in_arr.str_arr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->str_arr(i), output);
  }

  // @@protoc_insertion_point(serialize_end:arr_in_arr)
}

::google::protobuf::uint8* arr_in_arr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:arr_in_arr)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arr_in_arr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated int32 int_arr = 2;
  if (this->int_arr_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _int_arr_cached_byte_size_, target);
  }
  for (int i = 0; i < this->int_arr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->int_arr(i), target);
  }

  // repeated string str_arr = 3;
  for (int i = 0; i < this->str_arr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_arr(i).data(), this->str_arr(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "arr_in_arr.str_arr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->str_arr(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:arr_in_arr)
  return target;
}

size_t arr_in_arr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arr_in_arr)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated int32 int_arr = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->int_arr_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int_arr(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int_arr_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string str_arr = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->str_arr_size());
  for (int i = 0; i < this->str_arr_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->str_arr(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void arr_in_arr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arr_in_arr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const arr_in_arr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const arr_in_arr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arr_in_arr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arr_in_arr)
    UnsafeMergeFrom(*source);
  }
}

void arr_in_arr::MergeFrom(const arr_in_arr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arr_in_arr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void arr_in_arr::UnsafeMergeFrom(const arr_in_arr& from) {
  GOOGLE_DCHECK(&from != this);
  int_arr_.UnsafeMergeFrom(from.int_arr_);
  str_arr_.UnsafeMergeFrom(from.str_arr_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void arr_in_arr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arr_in_arr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void arr_in_arr::CopyFrom(const arr_in_arr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arr_in_arr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool arr_in_arr::IsInitialized() const {

  return true;
}

void arr_in_arr::Swap(arr_in_arr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void arr_in_arr::InternalSwap(arr_in_arr* other) {
  name_.Swap(&other->name_);
  int_arr_.UnsafeArenaSwap(&other->int_arr_);
  str_arr_.UnsafeArenaSwap(&other->str_arr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata arr_in_arr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = arr_in_arr_descriptor_;
  metadata.reflection = arr_in_arr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// arr_in_arr

// optional string name = 1;
void arr_in_arr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& arr_in_arr::name() const {
  // @@protoc_insertion_point(field_get:arr_in_arr.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void arr_in_arr::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:arr_in_arr.name)
}
void arr_in_arr::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:arr_in_arr.name)
}
void arr_in_arr::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:arr_in_arr.name)
}
::std::string* arr_in_arr::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:arr_in_arr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* arr_in_arr::release_name() {
  // @@protoc_insertion_point(field_release:arr_in_arr.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void arr_in_arr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:arr_in_arr.name)
}

// repeated int32 int_arr = 2;
int arr_in_arr::int_arr_size() const {
  return int_arr_.size();
}
void arr_in_arr::clear_int_arr() {
  int_arr_.Clear();
}
::google::protobuf::int32 arr_in_arr::int_arr(int index) const {
  // @@protoc_insertion_point(field_get:arr_in_arr.int_arr)
  return int_arr_.Get(index);
}
void arr_in_arr::set_int_arr(int index, ::google::protobuf::int32 value) {
  int_arr_.Set(index, value);
  // @@protoc_insertion_point(field_set:arr_in_arr.int_arr)
}
void arr_in_arr::add_int_arr(::google::protobuf::int32 value) {
  int_arr_.Add(value);
  // @@protoc_insertion_point(field_add:arr_in_arr.int_arr)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
arr_in_arr::int_arr() const {
  // @@protoc_insertion_point(field_list:arr_in_arr.int_arr)
  return int_arr_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
arr_in_arr::mutable_int_arr() {
  // @@protoc_insertion_point(field_mutable_list:arr_in_arr.int_arr)
  return &int_arr_;
}

// repeated string str_arr = 3;
int arr_in_arr::str_arr_size() const {
  return str_arr_.size();
}
void arr_in_arr::clear_str_arr() {
  str_arr_.Clear();
}
const ::std::string& arr_in_arr::str_arr(int index) const {
  // @@protoc_insertion_point(field_get:arr_in_arr.str_arr)
  return str_arr_.Get(index);
}
::std::string* arr_in_arr::mutable_str_arr(int index) {
  // @@protoc_insertion_point(field_mutable:arr_in_arr.str_arr)
  return str_arr_.Mutable(index);
}
void arr_in_arr::set_str_arr(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:arr_in_arr.str_arr)
  str_arr_.Mutable(index)->assign(value);
}
void arr_in_arr::set_str_arr(int index, const char* value) {
  str_arr_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:arr_in_arr.str_arr)
}
void arr_in_arr::set_str_arr(int index, const char* value, size_t size) {
  str_arr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:arr_in_arr.str_arr)
}
::std::string* arr_in_arr::add_str_arr() {
  // @@protoc_insertion_point(field_add_mutable:arr_in_arr.str_arr)
  return str_arr_.Add();
}
void arr_in_arr::add_str_arr(const ::std::string& value) {
  str_arr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:arr_in_arr.str_arr)
}
void arr_in_arr::add_str_arr(const char* value) {
  str_arr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:arr_in_arr.str_arr)
}
void arr_in_arr::add_str_arr(const char* value, size_t size) {
  str_arr_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:arr_in_arr.str_arr)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
arr_in_arr::str_arr() const {
  // @@protoc_insertion_point(field_list:arr_in_arr.str_arr)
  return str_arr_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
arr_in_arr::mutable_str_arr() {
  // @@protoc_insertion_point(field_mutable_list:arr_in_arr.str_arr)
  return &str_arr_;
}

inline const arr_in_arr* arr_in_arr::internal_default_instance() {
  return &arr_in_arr_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int test_msg_verifier::kTestId1FieldNumber;
const int test_msg_verifier::kTestId2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

test_msg_verifier::test_msg_verifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_kind_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:test_msg_verifier)
}

void test_msg_verifier::InitAsDefaultInstance() {
}

test_msg_verifier::test_msg_verifier(const test_msg_verifier& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:test_msg_verifier)
}

void test_msg_verifier::SharedCtor() {
  ::memset(&test_id_1_, 0, reinterpret_cast<char*>(&test_id_2_) -
    reinterpret_cast<char*>(&test_id_1_) + sizeof(test_id_2_));
  _cached_size_ = 0;
}

test_msg_verifier::~test_msg_verifier() {
  // @@protoc_insertion_point(destructor:test_msg_verifier)
  SharedDtor();
}

void test_msg_verifier::SharedDtor() {
}

void test_msg_verifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* test_msg_verifier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return test_msg_verifier_descriptor_;
}

const test_msg_verifier& test_msg_verifier::default_instance() {
  protobuf_InitDefaults_kind_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<test_msg_verifier> test_msg_verifier_default_instance_;

test_msg_verifier* test_msg_verifier::New(::google::protobuf::Arena* arena) const {
  test_msg_verifier* n = new test_msg_verifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void test_msg_verifier::Clear() {
// @@protoc_insertion_point(message_clear_start:test_msg_verifier)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(test_msg_verifier, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<test_msg_verifier*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(test_id_1_, test_id_2_);

#undef ZR_HELPER_
#undef ZR_

}

bool test_msg_verifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test_msg_verifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(80016);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 test_id_1 = 10001;
      case 10001: {
        if (tag == 80008) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_id_1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80016)) goto parse_test_id_2;
        break;
      }

      // optional uint32 test_id_2 = 10002;
      case 10002: {
        if (tag == 80016) {
         parse_test_id_2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_id_2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test_msg_verifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test_msg_verifier)
  return false;
#undef DO_
}

void test_msg_verifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test_msg_verifier)
  // optional uint32 test_id_1 = 10001;
  if (this->test_id_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10001, this->test_id_1(), output);
  }

  // optional uint32 test_id_2 = 10002;
  if (this->test_id_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10002, this->test_id_2(), output);
  }

  // @@protoc_insertion_point(serialize_end:test_msg_verifier)
}

::google::protobuf::uint8* test_msg_verifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:test_msg_verifier)
  // optional uint32 test_id_1 = 10001;
  if (this->test_id_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10001, this->test_id_1(), target);
  }

  // optional uint32 test_id_2 = 10002;
  if (this->test_id_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10002, this->test_id_2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:test_msg_verifier)
  return target;
}

size_t test_msg_verifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test_msg_verifier)
  size_t total_size = 0;

  // optional uint32 test_id_1 = 10001;
  if (this->test_id_1() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->test_id_1());
  }

  // optional uint32 test_id_2 = 10002;
  if (this->test_id_2() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->test_id_2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void test_msg_verifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test_msg_verifier)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const test_msg_verifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const test_msg_verifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test_msg_verifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test_msg_verifier)
    UnsafeMergeFrom(*source);
  }
}

void test_msg_verifier::MergeFrom(const test_msg_verifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test_msg_verifier)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void test_msg_verifier::UnsafeMergeFrom(const test_msg_verifier& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.test_id_1() != 0) {
    set_test_id_1(from.test_id_1());
  }
  if (from.test_id_2() != 0) {
    set_test_id_2(from.test_id_2());
  }
}

void test_msg_verifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test_msg_verifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void test_msg_verifier::CopyFrom(const test_msg_verifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_msg_verifier)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool test_msg_verifier::IsInitialized() const {

  return true;
}

void test_msg_verifier::Swap(test_msg_verifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void test_msg_verifier::InternalSwap(test_msg_verifier* other) {
  std::swap(test_id_1_, other->test_id_1_);
  std::swap(test_id_2_, other->test_id_2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata test_msg_verifier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = test_msg_verifier_descriptor_;
  metadata.reflection = test_msg_verifier_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// test_msg_verifier

// optional uint32 test_id_1 = 10001;
void test_msg_verifier::clear_test_id_1() {
  test_id_1_ = 0u;
}
::google::protobuf::uint32 test_msg_verifier::test_id_1() const {
  // @@protoc_insertion_point(field_get:test_msg_verifier.test_id_1)
  return test_id_1_;
}
void test_msg_verifier::set_test_id_1(::google::protobuf::uint32 value) {
  
  test_id_1_ = value;
  // @@protoc_insertion_point(field_set:test_msg_verifier.test_id_1)
}

// optional uint32 test_id_2 = 10002;
void test_msg_verifier::clear_test_id_2() {
  test_id_2_ = 0u;
}
::google::protobuf::uint32 test_msg_verifier::test_id_2() const {
  // @@protoc_insertion_point(field_get:test_msg_verifier.test_id_2)
  return test_id_2_;
}
void test_msg_verifier::set_test_id_2(::google::protobuf::uint32 value) {
  
  test_id_2_ = value;
  // @@protoc_insertion_point(field_set:test_msg_verifier.test_id_2)
}

inline const test_msg_verifier* test_msg_verifier::internal_default_instance() {
  return &test_msg_verifier_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int arr_in_arr_cfg::kIdFieldNumber;
const int arr_in_arr_cfg::kArrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

arr_in_arr_cfg::arr_in_arr_cfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_kind_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:arr_in_arr_cfg)
}

void arr_in_arr_cfg::InitAsDefaultInstance() {
}

arr_in_arr_cfg::arr_in_arr_cfg(const arr_in_arr_cfg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:arr_in_arr_cfg)
}

void arr_in_arr_cfg::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

arr_in_arr_cfg::~arr_in_arr_cfg() {
  // @@protoc_insertion_point(destructor:arr_in_arr_cfg)
  SharedDtor();
}

void arr_in_arr_cfg::SharedDtor() {
}

void arr_in_arr_cfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* arr_in_arr_cfg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return arr_in_arr_cfg_descriptor_;
}

const arr_in_arr_cfg& arr_in_arr_cfg::default_instance() {
  protobuf_InitDefaults_kind_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<arr_in_arr_cfg> arr_in_arr_cfg_default_instance_;

arr_in_arr_cfg* arr_in_arr_cfg::New(::google::protobuf::Arena* arena) const {
  arr_in_arr_cfg* n = new arr_in_arr_cfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void arr_in_arr_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:arr_in_arr_cfg)
  id_ = 0u;
  arr_.Clear();
}

bool arr_in_arr_cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:arr_in_arr_cfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arr;
        break;
      }

      // repeated .arr_in_arr arr = 2;
      case 2: {
        if (tag == 18) {
         parse_arr:
          DO_(input->IncrementRecursionDepth());
         parse_loop_arr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_arr;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:arr_in_arr_cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:arr_in_arr_cfg)
  return false;
#undef DO_
}

void arr_in_arr_cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:arr_in_arr_cfg)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .arr_in_arr arr = 2;
  for (unsigned int i = 0, n = this->arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arr(i), output);
  }

  // @@protoc_insertion_point(serialize_end:arr_in_arr_cfg)
}

::google::protobuf::uint8* arr_in_arr_cfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:arr_in_arr_cfg)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .arr_in_arr arr = 2;
  for (unsigned int i = 0, n = this->arr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->arr(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:arr_in_arr_cfg)
  return target;
}

size_t arr_in_arr_cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:arr_in_arr_cfg)
  size_t total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // repeated .arr_in_arr arr = 2;
  {
    unsigned int count = this->arr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->arr(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void arr_in_arr_cfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:arr_in_arr_cfg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const arr_in_arr_cfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const arr_in_arr_cfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:arr_in_arr_cfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:arr_in_arr_cfg)
    UnsafeMergeFrom(*source);
  }
}

void arr_in_arr_cfg::MergeFrom(const arr_in_arr_cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:arr_in_arr_cfg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void arr_in_arr_cfg::UnsafeMergeFrom(const arr_in_arr_cfg& from) {
  GOOGLE_DCHECK(&from != this);
  arr_.MergeFrom(from.arr_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void arr_in_arr_cfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:arr_in_arr_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void arr_in_arr_cfg::CopyFrom(const arr_in_arr_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arr_in_arr_cfg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool arr_in_arr_cfg::IsInitialized() const {

  return true;
}

void arr_in_arr_cfg::Swap(arr_in_arr_cfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void arr_in_arr_cfg::InternalSwap(arr_in_arr_cfg* other) {
  std::swap(id_, other->id_);
  arr_.UnsafeArenaSwap(&other->arr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata arr_in_arr_cfg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = arr_in_arr_cfg_descriptor_;
  metadata.reflection = arr_in_arr_cfg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// arr_in_arr_cfg

// optional uint32 id = 1;
void arr_in_arr_cfg::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 arr_in_arr_cfg::id() const {
  // @@protoc_insertion_point(field_get:arr_in_arr_cfg.id)
  return id_;
}
void arr_in_arr_cfg::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:arr_in_arr_cfg.id)
}

// repeated .arr_in_arr arr = 2;
int arr_in_arr_cfg::arr_size() const {
  return arr_.size();
}
void arr_in_arr_cfg::clear_arr() {
  arr_.Clear();
}
const ::arr_in_arr& arr_in_arr_cfg::arr(int index) const {
  // @@protoc_insertion_point(field_get:arr_in_arr_cfg.arr)
  return arr_.Get(index);
}
::arr_in_arr* arr_in_arr_cfg::mutable_arr(int index) {
  // @@protoc_insertion_point(field_mutable:arr_in_arr_cfg.arr)
  return arr_.Mutable(index);
}
::arr_in_arr* arr_in_arr_cfg::add_arr() {
  // @@protoc_insertion_point(field_add:arr_in_arr_cfg.arr)
  return arr_.Add();
}
::google::protobuf::RepeatedPtrField< ::arr_in_arr >*
arr_in_arr_cfg::mutable_arr() {
  // @@protoc_insertion_point(field_mutable_list:arr_in_arr_cfg.arr)
  return &arr_;
}
const ::google::protobuf::RepeatedPtrField< ::arr_in_arr >&
arr_in_arr_cfg::arr() const {
  // @@protoc_insertion_point(field_list:arr_in_arr_cfg.arr)
  return arr_;
}

inline const arr_in_arr_cfg* arr_in_arr_cfg::internal_default_instance() {
  return &arr_in_arr_cfg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
