// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_header_v3.proto

#include "pb_header_v3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_pb_5fheader_5fv3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_xresloader_header_pb_5fheader_5fv3_2eproto;
namespace org {
namespace xresloader {
namespace pb {
class xresloader_headerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<xresloader_header> _instance;
} _xresloader_header_default_instance_;
class xresloader_datablocksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<xresloader_datablocks> _instance;
} _xresloader_datablocks_default_instance_;
}  // namespace pb
}  // namespace xresloader
}  // namespace org
static void InitDefaultsxresloader_header_pb_5fheader_5fv3_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::org::xresloader::pb::_xresloader_header_default_instance_;
    new (ptr) ::org::xresloader::pb::xresloader_header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::org::xresloader::pb::xresloader_header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_xresloader_header_pb_5fheader_5fv3_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsxresloader_header_pb_5fheader_5fv3_2eproto}, {}};

static void InitDefaultsxresloader_datablocks_pb_5fheader_5fv3_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::org::xresloader::pb::_xresloader_datablocks_default_instance_;
    new (ptr) ::org::xresloader::pb::xresloader_datablocks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::org::xresloader::pb::xresloader_datablocks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_xresloader_datablocks_pb_5fheader_5fv3_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsxresloader_datablocks_pb_5fheader_5fv3_2eproto}, {
      &scc_info_xresloader_header_pb_5fheader_5fv3_2eproto.base,}};

void InitDefaults_pb_5fheader_5fv3_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_xresloader_header_pb_5fheader_5fv3_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_xresloader_datablocks_pb_5fheader_5fv3_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_pb_5fheader_5fv3_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_pb_5fheader_5fv3_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_pb_5fheader_5fv3_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_pb_5fheader_5fv3_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_header, xres_ver_),
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_header, data_ver_),
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_header, count_),
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_header, hash_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_datablocks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_datablocks, header_),
  PROTOBUF_FIELD_OFFSET(::org::xresloader::pb::xresloader_datablocks, data_block_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::org::xresloader::pb::xresloader_header)},
  { 9, -1, sizeof(::org::xresloader::pb::xresloader_datablocks)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::org::xresloader::pb::_xresloader_header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::org::xresloader::pb::_xresloader_datablocks_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_pb_5fheader_5fv3_2eproto = {
  {}, AddDescriptors_pb_5fheader_5fv3_2eproto, "pb_header_v3.proto", schemas,
  file_default_instances, TableStruct_pb_5fheader_5fv3_2eproto::offsets,
  file_level_metadata_pb_5fheader_5fv3_2eproto, 2, file_level_enum_descriptors_pb_5fheader_5fv3_2eproto, file_level_service_descriptors_pb_5fheader_5fv3_2eproto,
};

const char descriptor_table_protodef_pb_5fheader_5fv3_2eproto[] =
  "\n\022pb_header_v3.proto\022\021org.xresloader.pb\""
  "Y\n\021xresloader_header\022\020\n\010xres_ver\030\001 \001(\t\022\020"
  "\n\010data_ver\030\002 \001(\t\022\r\n\005count\030\003 \001(\r\022\021\n\thash_"
  "code\030\004 \001(\t\"a\n\025xresloader_datablocks\0224\n\006h"
  "eader\030\001 \001(\0132$.org.xresloader.pb.xresload"
  "er_header\022\022\n\ndata_block\030\002 \003(\014b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_pb_5fheader_5fv3_2eproto = {
  false, InitDefaults_pb_5fheader_5fv3_2eproto, 
  descriptor_table_protodef_pb_5fheader_5fv3_2eproto,
  "pb_header_v3.proto", &assign_descriptors_table_pb_5fheader_5fv3_2eproto, 237,
};

void AddDescriptors_pb_5fheader_5fv3_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_pb_5fheader_5fv3_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_pb_5fheader_5fv3_2eproto = []() { AddDescriptors_pb_5fheader_5fv3_2eproto(); return true; }();
namespace org {
namespace xresloader {
namespace pb {

// ===================================================================

void xresloader_header::InitAsDefaultInstance() {
}
class xresloader_header::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int xresloader_header::kXresVerFieldNumber;
const int xresloader_header::kDataVerFieldNumber;
const int xresloader_header::kCountFieldNumber;
const int xresloader_header::kHashCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

xresloader_header::xresloader_header()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.xresloader.pb.xresloader_header)
}
xresloader_header::xresloader_header(const xresloader_header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  xres_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xres_ver().size() > 0) {
    xres_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xres_ver_);
  }
  data_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_ver().size() > 0) {
    data_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_ver_);
  }
  hash_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_code().size() > 0) {
    hash_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_code_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:org.xresloader.pb.xresloader_header)
}

void xresloader_header::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_xresloader_header_pb_5fheader_5fv3_2eproto.base);
  xres_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
}

xresloader_header::~xresloader_header() {
  // @@protoc_insertion_point(destructor:org.xresloader.pb.xresloader_header)
  SharedDtor();
}

void xresloader_header::SharedDtor() {
  xres_ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void xresloader_header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const xresloader_header& xresloader_header::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_xresloader_header_pb_5fheader_5fv3_2eproto.base);
  return *internal_default_instance();
}


void xresloader_header::Clear() {
// @@protoc_insertion_point(message_clear_start:org.xresloader.pb.xresloader_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xres_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* xresloader_header::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<xresloader_header*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string xres_ver = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("org.xresloader.pb.xresloader_header.xres_ver");
        object = msg->mutable_xres_ver();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string data_ver = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("org.xresloader.pb.xresloader_header.data_ver");
        object = msg->mutable_data_ver();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string hash_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("org.xresloader.pb.xresloader_header.hash_code");
        object = msg->mutable_hash_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool xresloader_header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.xresloader.pb.xresloader_header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string xres_ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xres_ver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xres_ver().data(), static_cast<int>(this->xres_ver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.xresloader.pb.xresloader_header.xres_ver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_ver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_ver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_ver().data(), static_cast<int>(this->data_ver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.xresloader.pb.xresloader_header.data_ver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hash_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_code().data(), static_cast<int>(this->hash_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "org.xresloader.pb.xresloader_header.hash_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.xresloader.pb.xresloader_header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.xresloader.pb.xresloader_header)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void xresloader_header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.xresloader.pb.xresloader_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xres_ver = 1;
  if (this->xres_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xres_ver().data(), static_cast<int>(this->xres_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.xresloader.pb.xresloader_header.xres_ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xres_ver(), output);
  }

  // string data_ver = 2;
  if (this->data_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_ver().data(), static_cast<int>(this->data_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.xresloader.pb.xresloader_header.data_ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_ver(), output);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // string hash_code = 4;
  if (this->hash_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_code().data(), static_cast<int>(this->hash_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.xresloader.pb.xresloader_header.hash_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hash_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:org.xresloader.pb.xresloader_header)
}

::google::protobuf::uint8* xresloader_header::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.xresloader.pb.xresloader_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xres_ver = 1;
  if (this->xres_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xres_ver().data(), static_cast<int>(this->xres_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.xresloader.pb.xresloader_header.xres_ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xres_ver(), target);
  }

  // string data_ver = 2;
  if (this->data_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_ver().data(), static_cast<int>(this->data_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.xresloader.pb.xresloader_header.data_ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_ver(), target);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // string hash_code = 4;
  if (this->hash_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_code().data(), static_cast<int>(this->hash_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "org.xresloader.pb.xresloader_header.hash_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hash_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.xresloader.pb.xresloader_header)
  return target;
}

size_t xresloader_header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.xresloader.pb.xresloader_header)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string xres_ver = 1;
  if (this->xres_ver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xres_ver());
  }

  // string data_ver = 2;
  if (this->data_ver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_ver());
  }

  // string hash_code = 4;
  if (this->hash_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_code());
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void xresloader_header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.xresloader.pb.xresloader_header)
  GOOGLE_DCHECK_NE(&from, this);
  const xresloader_header* source =
      ::google::protobuf::DynamicCastToGenerated<xresloader_header>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.xresloader.pb.xresloader_header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.xresloader.pb.xresloader_header)
    MergeFrom(*source);
  }
}

void xresloader_header::MergeFrom(const xresloader_header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.xresloader.pb.xresloader_header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xres_ver().size() > 0) {

    xres_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xres_ver_);
  }
  if (from.data_ver().size() > 0) {

    data_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_ver_);
  }
  if (from.hash_code().size() > 0) {

    hash_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_code_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void xresloader_header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.xresloader.pb.xresloader_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xresloader_header::CopyFrom(const xresloader_header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.xresloader.pb.xresloader_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xresloader_header::IsInitialized() const {
  return true;
}

void xresloader_header::Swap(xresloader_header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void xresloader_header::InternalSwap(xresloader_header* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  xres_ver_.Swap(&other->xres_ver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_ver_.Swap(&other->data_ver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_code_.Swap(&other->hash_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
}

::google::protobuf::Metadata xresloader_header::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pb_5fheader_5fv3_2eproto);
  return ::file_level_metadata_pb_5fheader_5fv3_2eproto[kIndexInFileMessages];
}


// ===================================================================

void xresloader_datablocks::InitAsDefaultInstance() {
  ::org::xresloader::pb::_xresloader_datablocks_default_instance_._instance.get_mutable()->header_ = const_cast< ::org::xresloader::pb::xresloader_header*>(
      ::org::xresloader::pb::xresloader_header::internal_default_instance());
}
class xresloader_datablocks::HasBitSetters {
 public:
  static const ::org::xresloader::pb::xresloader_header& header(const xresloader_datablocks* msg);
};

const ::org::xresloader::pb::xresloader_header&
xresloader_datablocks::HasBitSetters::header(const xresloader_datablocks* msg) {
  return *msg->header_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int xresloader_datablocks::kHeaderFieldNumber;
const int xresloader_datablocks::kDataBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

xresloader_datablocks::xresloader_datablocks()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:org.xresloader.pb.xresloader_datablocks)
}
xresloader_datablocks::xresloader_datablocks(const xresloader_datablocks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      data_block_(from.data_block_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::org::xresloader::pb::xresloader_header(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.xresloader.pb.xresloader_datablocks)
}

void xresloader_datablocks::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_xresloader_datablocks_pb_5fheader_5fv3_2eproto.base);
  header_ = nullptr;
}

xresloader_datablocks::~xresloader_datablocks() {
  // @@protoc_insertion_point(destructor:org.xresloader.pb.xresloader_datablocks)
  SharedDtor();
}

void xresloader_datablocks::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void xresloader_datablocks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const xresloader_datablocks& xresloader_datablocks::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_xresloader_datablocks_pb_5fheader_5fv3_2eproto.base);
  return *internal_default_instance();
}


void xresloader_datablocks::Clear() {
// @@protoc_insertion_point(message_clear_start:org.xresloader.pb.xresloader_datablocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_block_.Clear();
  if (GetArenaNoVirtual() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* xresloader_datablocks::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<xresloader_datablocks*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .org.xresloader.pb.xresloader_header header = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::org::xresloader::pb::xresloader_header::_InternalParse;
        object = msg->mutable_header();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated bytes data_block = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_data_block();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool xresloader_datablocks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:org.xresloader.pb.xresloader_datablocks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .org.xresloader.pb.xresloader_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes data_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:org.xresloader.pb.xresloader_datablocks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:org.xresloader.pb.xresloader_datablocks)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void xresloader_datablocks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:org.xresloader.pb.xresloader_datablocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.xresloader.pb.xresloader_header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::header(this), output);
  }

  // repeated bytes data_block = 2;
  for (int i = 0, n = this->data_block_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->data_block(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:org.xresloader.pb.xresloader_datablocks)
}

::google::protobuf::uint8* xresloader_datablocks::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.xresloader.pb.xresloader_datablocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.xresloader.pb.xresloader_header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::header(this), target);
  }

  // repeated bytes data_block = 2;
  for (int i = 0, n = this->data_block_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->data_block(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.xresloader.pb.xresloader_datablocks)
  return target;
}

size_t xresloader_datablocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.xresloader.pb.xresloader_datablocks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data_block = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_block_size());
  for (int i = 0, n = this->data_block_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data_block(i));
  }

  // .org.xresloader.pb.xresloader_header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void xresloader_datablocks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.xresloader.pb.xresloader_datablocks)
  GOOGLE_DCHECK_NE(&from, this);
  const xresloader_datablocks* source =
      ::google::protobuf::DynamicCastToGenerated<xresloader_datablocks>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.xresloader.pb.xresloader_datablocks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.xresloader.pb.xresloader_datablocks)
    MergeFrom(*source);
  }
}

void xresloader_datablocks::MergeFrom(const xresloader_datablocks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.xresloader.pb.xresloader_datablocks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_block_.MergeFrom(from.data_block_);
  if (from.has_header()) {
    mutable_header()->::org::xresloader::pb::xresloader_header::MergeFrom(from.header());
  }
}

void xresloader_datablocks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.xresloader.pb.xresloader_datablocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xresloader_datablocks::CopyFrom(const xresloader_datablocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.xresloader.pb.xresloader_datablocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xresloader_datablocks::IsInitialized() const {
  return true;
}

void xresloader_datablocks::Swap(xresloader_datablocks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void xresloader_datablocks::InternalSwap(xresloader_datablocks* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_block_.InternalSwap(CastToBase(&other->data_block_));
  swap(header_, other->header_);
}

::google::protobuf::Metadata xresloader_datablocks::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pb_5fheader_5fv3_2eproto);
  return ::file_level_metadata_pb_5fheader_5fv3_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace xresloader
}  // namespace org
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::org::xresloader::pb::xresloader_header* Arena::CreateMaybeMessage< ::org::xresloader::pb::xresloader_header >(Arena* arena) {
  return Arena::CreateInternal< ::org::xresloader::pb::xresloader_header >(arena);
}
template<> PROTOBUF_NOINLINE ::org::xresloader::pb::xresloader_datablocks* Arena::CreateMaybeMessage< ::org::xresloader::pb::xresloader_datablocks >(Arena* arena) {
  return Arena::CreateInternal< ::org::xresloader::pb::xresloader_datablocks >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
